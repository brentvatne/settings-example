{"version":3,"file":"ExpoSettings.js","sourceRoot":"","sources":["../src/ExpoSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,+EAA+E;AAC/E,6CAA6C;AAC7C,OAAO,YAAY,MAAM,sBAAsB,CAAC;AAChD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAGlD,iCAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC;AAElC,MAAM,UAAU,KAAK;IACnB,OAAO,YAAY,CAAC,KAAK,EAAE,CAAC;AAC9B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjD,CAAC;AAED,6FAA6F;AAC7F,6EAA6E;AAC7E,sHAAsH;AACtH,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;AAElF,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,gBAAgB,EAA6C,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ExpoSettings.web.ts\n// and on native platforms to ExpoSettings.ts\nimport ExpoSettings from './ExpoSettingsModule';\nimport ExpoSettingsView from './ExpoSettingsView';\nimport { ChangeEventPayload, ExpoSettingsViewProps } from './ExpoSettings.types';\n\n// Get the native constant value.\nexport const PI = ExpoSettings.PI;\n\nexport function hello(): string {\n  return ExpoSettings.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await ExpoSettings.setValueAsync(value);\n}\n\n// For now the events are not going through the JSI, so we have to use its bridge equivalent.\n// This will be fixed in the stable release and built into the module object.\n// Note: On web, NativeModulesProxy.ExpoSettings is undefined, so we fall back to the directly imported implementation\nconst emitter = new EventEmitter(NativeModulesProxy.ExpoSettings ?? ExpoSettings);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { ExpoSettingsView, ExpoSettingsViewProps, ChangeEventPayload };\n"]}